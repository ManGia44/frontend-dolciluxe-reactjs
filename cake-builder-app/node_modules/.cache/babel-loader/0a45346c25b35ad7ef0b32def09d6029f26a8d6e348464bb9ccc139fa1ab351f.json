{"ast":null,"code":"var _jsxFileName = \"D:\\\\M\\xF4n h\\u1ECDc\\\\C\\xF4ng ngh\\u1EC7 Java\\\\cake-builder-app\\\\src\\\\components\\\\CakeCanvas.js\";\n// import React from 'react';\n// import './CakeCanvas.css';\n// import Layer from './Layer';\n\n// const CANVAS_WIDTH = 300;\n// const CANVAS_HEIGHT = 300;\n// const BASE_X = CANVAS_WIDTH / 2;\n// const BASE_Y = CANVAS_HEIGHT / 2 + 50; // Điều chỉnh vị trí trung tâm theo chiều dọc\n\n// function CakeCanvas({ layers, onDrop, numLayers }) {\n//     return (\n//         <div\n//             className=\"cake-canvas\"\n//             style={{ width: `${CANVAS_WIDTH}px`, height: `${CANVAS_HEIGHT}px` }}\n//             onDrop={onDrop}\n//             onDragOver={(e) => e.preventDefault()}\n//         >\n//             {layers.map((layer, index) => {\n//                 let x = BASE_X - 50;\n//                 let y = BASE_Y - 50;\n//                 let width = 100;\n//                 let height = 100;\n//                 let zIndex = index + 1;\n\n//                 switch (layer.type) {\n//                     case 'shape':\n//                         break;\n//                     case 'base':\n//                         break;\n//                     case 'midCream':\n//                         y -= 22.6;\n//                         break;\n//                     case 'topColorSecondLayer':\n//                         width *= 0.8;\n//                         height *= 0.8;\n//                         x += 37.6 / 2;\n//                         y -= 61.9 / 2;\n//                         break;\n//                     case 'topCream':\n//                         if (numLayers === 1) {\n//                             y -= 22.6;\n//                         } else if (numLayers === 2) {\n//                             width *= 0.8;\n//                             height *= 0.8;\n//                             x += 37.6 / 2;\n//                             y -= 61.9 / 2;\n//                         }\n//                         break;\n//                     case 'sugar':\n//                         if (numLayers === 1) {\n//                             y -= 22.6;\n//                         } else if (numLayers === 2) {\n//                             width *= 0.8;\n//                             height *= 0.8;\n//                             x += 37.6 / 2;\n//                             y -= 61.9 / 2;\n//                         }\n//                         break;\n//                     default:\n//                         break;\n//                 }\n\n//                 return (\n//                     <Layer\n//                         key={index}\n//                         src={layer.src}\n//                         alt={layer.type}\n//                         style={{\n//                             position: 'absolute',\n//                             left: `${x}px`,\n//                             top: `${y}px`,\n//                             width: `${width}px`,\n//                             height: `${height}px`,\n//                             zIndex: zIndex,\n//                         }}\n//                     />\n//                 );\n//             })}\n//         </div>\n//     );\n// }\n\n// export default CakeCanvas;\n\nimport React from 'react';\nimport './CakeCanvas.css';\nimport Layer from './Layer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 300;\nconst CANVAS_HEIGHT = 300;\nconst BASE_X = CANVAS_WIDTH / 2;\nconst BASE_Y = CANVAS_HEIGHT / 2 + 50; // Điều chỉnh vị trí trung tâm theo chiều dọc\n\nfunction CakeCanvas({\n  layers,\n  onDrop,\n  numLayers\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cake-canvas\",\n    style: {\n      width: `${CANVAS_WIDTH}px`,\n      height: `${CANVAS_HEIGHT}px`\n    },\n    onDrop: onDrop,\n    onDragOver: e => e.preventDefault(),\n    children: layers.map((layer, index) => {\n      let x = BASE_X - 50;\n      let y = BASE_Y - 50;\n      let width = 100;\n      let height = 100;\n      let zIndex = index + 1;\n      switch (layer.type) {\n        case 'shape':\n          break;\n        case 'base':\n          break;\n        case 'midCream':\n          y -= 22.6;\n          break;\n        case 'topColorSecondLayer':\n          width *= 0.8;\n          height *= 0.8;\n          x += 37.6;\n          y -= 61.9;\n          break;\n        case 'topCream':\n          if (numLayers === 1) {\n            y -= 22.6;\n          } else if (numLayers === 2) {\n            width *= 0.8;\n            height *= 0.8;\n            x += 37.6;\n            y -= 61.9;\n          }\n          break;\n        case 'sugar':\n          if (numLayers === 1) {\n            y -= 22.6;\n          } else if (numLayers === 2) {\n            width *= 0.8;\n            height *= 0.8;\n            x += 37.6;\n            y -= 61.9;\n          }\n          break;\n        default:\n          break;\n      }\n      return /*#__PURE__*/_jsxDEV(Layer, {\n        src: layer.src,\n        alt: layer.type,\n        style: {\n          position: 'absolute',\n          left: `${x}px`,\n          top: `${y}px`,\n          width: `${width}px`,\n          height: `${height}px`,\n          zIndex: zIndex\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n_c = CakeCanvas;\nexport default CakeCanvas;\nvar _c;\n$RefreshReg$(_c, \"CakeCanvas\");","map":{"version":3,"names":["React","Layer","jsxDEV","_jsxDEV","CANVAS_WIDTH","CANVAS_HEIGHT","BASE_X","BASE_Y","CakeCanvas","layers","onDrop","numLayers","className","style","width","height","onDragOver","e","preventDefault","children","map","layer","index","x","y","zIndex","type","src","alt","position","left","top","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Môn học/Công nghệ Java/cake-builder-app/src/components/CakeCanvas.js"],"sourcesContent":["// import React from 'react';\r\n// import './CakeCanvas.css';\r\n// import Layer from './Layer';\r\n\r\n// const CANVAS_WIDTH = 300;\r\n// const CANVAS_HEIGHT = 300;\r\n// const BASE_X = CANVAS_WIDTH / 2;\r\n// const BASE_Y = CANVAS_HEIGHT / 2 + 50; // Điều chỉnh vị trí trung tâm theo chiều dọc\r\n\r\n// function CakeCanvas({ layers, onDrop, numLayers }) {\r\n//     return (\r\n//         <div\r\n//             className=\"cake-canvas\"\r\n//             style={{ width: `${CANVAS_WIDTH}px`, height: `${CANVAS_HEIGHT}px` }}\r\n//             onDrop={onDrop}\r\n//             onDragOver={(e) => e.preventDefault()}\r\n//         >\r\n//             {layers.map((layer, index) => {\r\n//                 let x = BASE_X - 50;\r\n//                 let y = BASE_Y - 50;\r\n//                 let width = 100;\r\n//                 let height = 100;\r\n//                 let zIndex = index + 1;\r\n\r\n//                 switch (layer.type) {\r\n//                     case 'shape':\r\n//                         break;\r\n//                     case 'base':\r\n//                         break;\r\n//                     case 'midCream':\r\n//                         y -= 22.6;\r\n//                         break;\r\n//                     case 'topColorSecondLayer':\r\n//                         width *= 0.8;\r\n//                         height *= 0.8;\r\n//                         x += 37.6 / 2;\r\n//                         y -= 61.9 / 2;\r\n//                         break;\r\n//                     case 'topCream':\r\n//                         if (numLayers === 1) {\r\n//                             y -= 22.6;\r\n//                         } else if (numLayers === 2) {\r\n//                             width *= 0.8;\r\n//                             height *= 0.8;\r\n//                             x += 37.6 / 2;\r\n//                             y -= 61.9 / 2;\r\n//                         }\r\n//                         break;\r\n//                     case 'sugar':\r\n//                         if (numLayers === 1) {\r\n//                             y -= 22.6;\r\n//                         } else if (numLayers === 2) {\r\n//                             width *= 0.8;\r\n//                             height *= 0.8;\r\n//                             x += 37.6 / 2;\r\n//                             y -= 61.9 / 2;\r\n//                         }\r\n//                         break;\r\n//                     default:\r\n//                         break;\r\n//                 }\r\n\r\n//                 return (\r\n//                     <Layer\r\n//                         key={index}\r\n//                         src={layer.src}\r\n//                         alt={layer.type}\r\n//                         style={{\r\n//                             position: 'absolute',\r\n//                             left: `${x}px`,\r\n//                             top: `${y}px`,\r\n//                             width: `${width}px`,\r\n//                             height: `${height}px`,\r\n//                             zIndex: zIndex,\r\n//                         }}\r\n//                     />\r\n//                 );\r\n//             })}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CakeCanvas;\r\n\r\nimport React from 'react';\r\nimport './CakeCanvas.css';\r\nimport Layer from './Layer';\r\n\r\nconst CANVAS_WIDTH = 300;\r\nconst CANVAS_HEIGHT = 300;\r\nconst BASE_X = CANVAS_WIDTH / 2;\r\nconst BASE_Y = CANVAS_HEIGHT / 2 + 50; // Điều chỉnh vị trí trung tâm theo chiều dọc\r\n\r\nfunction CakeCanvas({ layers, onDrop, numLayers }) {\r\n    return (\r\n        <div\r\n            className=\"cake-canvas\"\r\n            style={{ width: `${CANVAS_WIDTH}px`, height: `${CANVAS_HEIGHT}px` }}\r\n            onDrop={onDrop}\r\n            onDragOver={(e) => e.preventDefault()}\r\n        >\r\n            {layers.map((layer, index) => {\r\n                let x = BASE_X - 50;\r\n                let y = BASE_Y - 50;\r\n                let width = 100;\r\n                let height = 100;\r\n                let zIndex = index + 1;\r\n\r\n                switch (layer.type) {\r\n                    case 'shape':\r\n                        break;\r\n                    case 'base':\r\n                        break;\r\n                    case 'midCream':\r\n                        y -= 22.6;\r\n                        break;\r\n                    case 'topColorSecondLayer':\r\n                        width *= 0.8;\r\n                        height *= 0.8;\r\n                        x += 37.6;\r\n                        y -= 61.9;\r\n                        break;\r\n                    case 'topCream':\r\n                        if (numLayers === 1) {\r\n                            y -= 22.6;\r\n                        } else if (numLayers === 2) {\r\n                            width *= 0.8;\r\n                            height *= 0.8;\r\n                            x += 37.6;\r\n                            y -= 61.9;\r\n                        }\r\n                        break;\r\n                    case 'sugar':\r\n                        if (numLayers === 1) {\r\n                            y -= 22.6;\r\n                        } else if (numLayers === 2) {\r\n                            width *= 0.8;\r\n                            height *= 0.8;\r\n                            x += 37.6;\r\n                            y -= 61.9;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                return (\r\n                    <Layer\r\n                        key={index}\r\n                        src={layer.src}\r\n                        alt={layer.type}\r\n                        style={{\r\n                            position: 'absolute',\r\n                            left: `${x}px`,\r\n                            top: `${y}px`,\r\n                            width: `${width}px`,\r\n                            height: `${height}px`,\r\n                            zIndex: zIndex,\r\n                        }}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CakeCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}