{"ast":null,"code":"var _jsxFileName = \"D:\\\\M\\xF4n h\\u1ECDc\\\\C\\xF4ng ngh\\u1EC7 Java\\\\cake-builder-app\\\\src\\\\components\\\\preview\\\\CakePreview.jsx\",\n  _s = $RefreshSig$();\n// // File: src/components/CakePreview.jsx\n// import React from 'react';\n// import { useDrop } from 'react-dnd';\n\n// function CakePreview({ layers, tier, onDropLayer }) {\n//   const baseX = 200;\n//   const baseY = 300;\n\n//   const [{ isOver }, drop] = useDrop(() => ({\n//     accept: 'layer',\n//     drop: (item) => {\n//       onDropLayer(item.layerType, item.src);\n//     },\n//     collect: (monitor) => ({\n//       isOver: !!monitor.isOver(),\n//     }),\n//   }));\n\n//   const getStyle = (layerType) => {\n//     switch (layerType) {\n//       case 'shape':\n//         return { left: baseX, top: baseY };\n//       case 'color':\n//         return { left: baseX, top: baseY, position: 'absolute' };\n//       case 'creamMiddle':\n//         return { left: baseX, top: baseY - 22.6, position: 'absolute' };\n//       case 'colorTier2':\n//         return {\n//           left: baseX + 37.6,\n//           top: baseY - 61.9,\n//           transform: 'scale(0.8)',\n//           position: 'absolute',\n//         };\n//       case 'creamTop':\n//       case 'smooth':\n//         if (tier === 2) {\n//           return {\n//             left: baseX + 37.6,\n//             top: baseY - 61.9,\n//             transform: 'scale(0.8)',\n//             position: 'absolute',\n//           };\n//         } else {\n//           return { left: baseX, top: baseY - 22.6, position: 'absolute' };\n//         }\n//       default:\n//         return {};\n//     }\n//   };\n\n//   return (\n//     <div\n//       ref={drop}\n//       className={`relative w-[500px] h-[400px] border bg-white ${\n//         isOver ? 'border-blue-500' : ''\n//       }`}\n//     >\n//       {Object.entries(layers).map(([key, src]) =>\n//         src ? (\n//           <img\n//             key={key}\n//             src={src}\n//             alt={key}\n//             className=\"absolute\"\n//             style={getStyle(key)}\n//           />\n//         ) : null\n//       )}\n//     </div>\n//   );\n// }\n\n// export default CakePreview;\n// File: src/components/CakePreview.jsx\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CakePreview({\n  layers,\n  width = 300,\n  height = 300\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, width, height);\n    layers.forEach(layer => {\n      if (!layer.visible) return;\n      const img = new Image();\n      img.src = layer.src;\n      img.onload = () => {\n        ctx.drawImage(img, layer.x || 0, layer.y || 0, layer.scale ? width * layer.scale : width, layer.scale ? height * layer.scale : height);\n      };\n    });\n  }, [layers]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height,\n    className: \"border\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n}\n_s(CakePreview, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CakePreview;\nexport default CakePreview;\nvar _c;\n$RefreshReg$(_c, \"CakePreview\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","CakePreview","layers","width","height","_s","canvasRef","ctx","current","getContext","clearRect","forEach","layer","visible","img","Image","src","onload","drawImage","x","y","scale","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Môn học/Công nghệ Java/cake-builder-app/src/components/preview/CakePreview.jsx"],"sourcesContent":["// // File: src/components/CakePreview.jsx\r\n// import React from 'react';\r\n// import { useDrop } from 'react-dnd';\r\n\r\n// function CakePreview({ layers, tier, onDropLayer }) {\r\n//   const baseX = 200;\r\n//   const baseY = 300;\r\n\r\n//   const [{ isOver }, drop] = useDrop(() => ({\r\n//     accept: 'layer',\r\n//     drop: (item) => {\r\n//       onDropLayer(item.layerType, item.src);\r\n//     },\r\n//     collect: (monitor) => ({\r\n//       isOver: !!monitor.isOver(),\r\n//     }),\r\n//   }));\r\n\r\n//   const getStyle = (layerType) => {\r\n//     switch (layerType) {\r\n//       case 'shape':\r\n//         return { left: baseX, top: baseY };\r\n//       case 'color':\r\n//         return { left: baseX, top: baseY, position: 'absolute' };\r\n//       case 'creamMiddle':\r\n//         return { left: baseX, top: baseY - 22.6, position: 'absolute' };\r\n//       case 'colorTier2':\r\n//         return {\r\n//           left: baseX + 37.6,\r\n//           top: baseY - 61.9,\r\n//           transform: 'scale(0.8)',\r\n//           position: 'absolute',\r\n//         };\r\n//       case 'creamTop':\r\n//       case 'smooth':\r\n//         if (tier === 2) {\r\n//           return {\r\n//             left: baseX + 37.6,\r\n//             top: baseY - 61.9,\r\n//             transform: 'scale(0.8)',\r\n//             position: 'absolute',\r\n//           };\r\n//         } else {\r\n//           return { left: baseX, top: baseY - 22.6, position: 'absolute' };\r\n//         }\r\n//       default:\r\n//         return {};\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       ref={drop}\r\n//       className={`relative w-[500px] h-[400px] border bg-white ${\r\n//         isOver ? 'border-blue-500' : ''\r\n//       }`}\r\n//     >\r\n//       {Object.entries(layers).map(([key, src]) =>\r\n//         src ? (\r\n//           <img\r\n//             key={key}\r\n//             src={src}\r\n//             alt={key}\r\n//             className=\"absolute\"\r\n//             style={getStyle(key)}\r\n//           />\r\n//         ) : null\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CakePreview;\r\n// File: src/components/CakePreview.jsx\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\nfunction CakePreview({ layers, width = 300, height = 300 }) {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.clearRect(0, 0, width, height);\r\n\r\n    layers.forEach(layer => {\r\n      if (!layer.visible) return;\r\n      const img = new Image();\r\n      img.src = layer.src;\r\n      img.onload = () => {\r\n        ctx.drawImage(\r\n          img,\r\n          layer.x || 0,\r\n          layer.y || 0,\r\n          layer.scale ? width * layer.scale : width,\r\n          layer.scale ? height * layer.scale : height\r\n        );\r\n      };\r\n    });\r\n  }, [layers]);\r\n\r\n  return <canvas ref={canvasRef} width={width} height={height} className=\"border\" />;\r\n}\r\n\r\nexport default CakePreview;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,WAAWA,CAAC;EAAEC,MAAM;EAAEC,KAAK,GAAG,GAAG;EAAEC,MAAM,GAAG;AAAI,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,MAAMS,GAAG,GAAGD,SAAS,CAACE,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAC9CF,GAAG,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEP,KAAK,EAAEC,MAAM,CAAC;IAElCF,MAAM,CAACS,OAAO,CAACC,KAAK,IAAI;MACtB,IAAI,CAACA,KAAK,CAACC,OAAO,EAAE;MACpB,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,GAAG,GAAGJ,KAAK,CAACI,GAAG;MACnBF,GAAG,CAACG,MAAM,GAAG,MAAM;QACjBV,GAAG,CAACW,SAAS,CACXJ,GAAG,EACHF,KAAK,CAACO,CAAC,IAAI,CAAC,EACZP,KAAK,CAACQ,CAAC,IAAI,CAAC,EACZR,KAAK,CAACS,KAAK,GAAGlB,KAAK,GAAGS,KAAK,CAACS,KAAK,GAAGlB,KAAK,EACzCS,KAAK,CAACS,KAAK,GAAGjB,MAAM,GAAGQ,KAAK,CAACS,KAAK,GAAGjB,MACvC,CAAC;MACH,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAEZ,oBAAOF,OAAA;IAAQsB,GAAG,EAAEhB,SAAU;IAACH,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA,MAAO;IAACmB,SAAS,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpF;AAACtB,EAAA,CAxBQJ,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AA0BpB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}