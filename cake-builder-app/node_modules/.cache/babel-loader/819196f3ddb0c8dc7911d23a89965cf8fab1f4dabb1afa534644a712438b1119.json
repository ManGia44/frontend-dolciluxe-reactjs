{"ast":null,"code":"var _jsxFileName = \"D:\\\\M\\xF4n h\\u1ECDc\\\\C\\xF4ng ngh\\u1EC7 Java\\\\cake-builder-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport CakeControl from './components/CakeControl';\nimport CakeCanvas from './components/CakeCanvas';\nimport html2canvas from 'html2canvas'; // Import html2canvas\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State để lưu trữ các lựa chọn của người dùng\n  const [numLayers, setNumLayers] = useState(null);\n  const [shape, setShape] = useState(null);\n  const [baseColor, setBaseColor] = useState(null);\n  const [midCream, setMidCream] = useState(null); // Chỉ khi 2 tầng\n  const [topColorSecondLayer, setTopColorSecondLayer] = useState(null); // Chỉ khi 2 tầng\n  const [topCream, setTopCream] = useState(null);\n  const [sugar, setSugar] = useState(null);\n\n  // State để quản lý các lớp hình ảnh hiển thị trên canvas\n  const [layers, setLayers] = useState([]);\n\n  // Ref để tham chiếu đến element canvas cho việc chụp ảnh\n  const cakeCanvasRef = useRef(null);\n  const imagePath = '/images/';\n\n  // Hàm reset toàn bộ bánh về trạng thái ban đầu\n  const resetCake = () => {\n    setNumLayers(null);\n    setShape(null);\n    setBaseColor(null);\n    setMidCream(null);\n    setTopColorSecondLayer(null);\n    setTopCream(null);\n    setSugar(null);\n    setLayers([]);\n  };\n\n  // Hàm cập nhật các lớp trên canvas\n  const updateLayers = (newLayer, layerType, removeShapeLayer = false) => {\n    setLayers(prevLayers => {\n      let updated = prevLayers.filter(layer => layer.type !== layerType); // Xóa lớp cũ cùng loại\n      if (removeShapeLayer) {\n        updated = updated.filter(layer => layer.type !== 'shape'); // Xóa lớp hình dạng nếu yêu cầu\n      }\n      if (newLayer) {\n        updated.push(newLayer); // Thêm lớp mới\n      }\n      // Sắp xếp lại các lớp để đảm bảo thứ tự hiển thị đúng (zIndex)\n      const layerOrder = ['shape', 'base', 'midCream', 'topColorSecondLayer', 'topCream', 'sugar'];\n      updated.sort((a, b) => layerOrder.indexOf(a.type) - layerOrder.indexOf(b.type));\n      return updated;\n    });\n  };\n\n  // --- Các hàm xử lý lựa chọn (click và drag-drop sẽ gọi các hàm này) ---\n\n  const handleSelectNumLayers = layersCount => {\n    resetCake(); // Reset toàn bộ khi chọn lại số tầng\n    setNumLayers(layersCount);\n  };\n  const handleSelectShape = selectedShape => {\n    setShape(selectedShape);\n    setBaseColor(null);\n    setMidCream(null);\n    setTopColorSecondLayer(null);\n    setTopCream(null);\n    setSugar(null);\n    updateLayers({\n      type: 'shape',\n      image: `${selectedShape}_form.png`\n    }, 'shape');\n  };\n  const handleSelectBaseColor = color => {\n    setBaseColor(color);\n    setMidCream(null);\n    setTopColorSecondLayer(null);\n    setTopCream(null);\n    setSugar(null);\n    // Khi chọn màu sắc, ẩn hình dạng và thay bằng hình ảnh màu sắc cơ bản\n    updateLayers({\n      type: 'base',\n      image: `${shape}_base_${color}.png`\n    }, 'base', true);\n  };\n  const handleSelectMidCream = cream => {\n    setMidCream(cream);\n    setTopColorSecondLayer(null);\n    setTopCream(null);\n    setSugar(null);\n    updateLayers({\n      type: 'midCream',\n      image: `${shape}_mid_${cream}.png`\n    }, 'midCream');\n  };\n  const handleSelectTopColorSecondLayer = color => {\n    setTopColorSecondLayer(color);\n    setTopCream(null);\n    setSugar(null);\n    updateLayers({\n      type: 'topColorSecondLayer',\n      image: `${shape}_base_${color}.png`\n    }, 'topColorSecondLayer');\n  };\n  const handleSelectTopCream = cream => {\n    setTopCream(cream);\n    setSugar(null);\n    updateLayers({\n      type: 'topCream',\n      image: `${shape}_top_${cream}.png`\n    }, 'topCream');\n  };\n  const handleSelectSugar = hasSugar => {\n    if (hasSugar) {\n      setSugar(true);\n      updateLayers({\n        type: 'sugar',\n        image: `${shape}_sugar.png`\n      }, 'sugar');\n    } else {\n      setSugar(false); // Đặt false để biết là đã chọn bỏ qua\n      updateLayers(null, 'sugar'); // Xóa lớp đường mịn\n    }\n  };\n\n  // --- Các hàm xử lý \"Bỏ qua\" ---\n\n  const handleSkipShape = () => {\n    setShape(null);\n    setBaseColor(null);\n    setMidCream(null);\n    setTopColorSecondLayer(null);\n    setTopCream(null);\n    setSugar(null);\n    setLayers([]); // Xóa tất cả các lớp liên quan đến hình dạng và sau đó\n  };\n  const handleSkipBaseColor = () => {\n    setBaseColor(null);\n    setMidCream(null);\n    setTopColorSecondLayer(null);\n    setTopCream(null);\n    setSugar(null);\n    setLayers(prevLayers => prevLayers.filter(layer => layer.type !== 'base' && layer.type !== 'midCream' && layer.type !== 'topColorSecondLayer' && layer.type !== 'topCream' && layer.type !== 'sugar'));\n    // Giữ lại lớp hình dạng nếu có\n    if (shape && !layers.some(layer => layer.type === 'shape')) {\n      setLayers(prevLayers => [...prevLayers, {\n        type: 'shape',\n        image: `${shape}_form.png`\n      }]);\n    }\n  };\n  const handleSkipMidCream = () => {\n    setMidCream(null);\n    setTopColorSecondLayer(null);\n    setTopCream(null);\n    setSugar(null);\n    setLayers(prevLayers => prevLayers.filter(layer => layer.type !== 'midCream' && layer.type !== 'topColorSecondLayer' && layer.type !== 'topCream' && layer.type !== 'sugar'));\n  };\n  const handleSkipTopColorSecondLayer = () => {\n    setTopColorSecondLayer(null);\n    setTopCream(null);\n    setSugar(null);\n    setLayers(prevLayers => prevLayers.filter(layer => layer.type !== 'topColorSecondLayer' && layer.type !== 'topCream' && layer.type !== 'sugar'));\n  };\n  const handleSkipTopCream = () => {\n    setTopCream(null);\n    setSugar(null);\n    setLayers(prevLayers => prevLayers.filter(layer => layer.type !== 'topCream' && layer.type !== 'sugar'));\n  };\n  const handleSkipSugar = () => {\n    setSugar(null);\n    setLayers(prevLayers => prevLayers.filter(layer => layer.type !== 'sugar'));\n  };\n\n  // --- Hàm xử lý kéo thả ---\n  const handleDrop = e => {\n    e.preventDefault();\n    const data = JSON.parse(e.dataTransfer.getData('application/json'));\n    const {\n      itemType,\n      itemName\n    } = data;\n\n    // Dựa vào itemType để gọi hàm xử lý lựa chọn tương ứng\n    switch (itemType) {\n      case 'numLayers':\n        handleSelectNumLayers(parseInt(itemName));\n        break;\n      case 'shape':\n        handleSelectShape(itemName);\n        break;\n      case 'baseColor':\n        handleSelectBaseColor(itemName);\n        break;\n      case 'midCream':\n        handleSelectMidCream(itemName);\n        break;\n      case 'topColorSecondLayer':\n        handleSelectTopColorSecondLayer(itemName);\n        break;\n      case 'topCream':\n        handleSelectTopCream(itemName);\n        break;\n      case 'sugar':\n        handleSelectSugar(itemName === 'yes'); // 'yes' hoặc 'no'\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Hàm tạo ảnh từ canvas\n  const handleCreateImage = () => {\n    if (cakeCanvasRef.current) {\n      html2canvas(cakeCanvasRef.current, {\n        backgroundColor: null,\n        // Đặt null để nền trong suốt nếu không có màu nền\n        scale: 2 // Tăng độ phân giải ảnh\n      }).then(canvas => {\n        const image = canvas.toDataURL('image/png');\n        const link = document.createElement('a');\n        link.href = image;\n        link.download = 'banh_kem_thiet_ke.png';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        alert('Ảnh bánh kem đã được tạo và tải xuống!');\n      }).catch(error => {\n        console.error('Lỗi khi tạo ảnh:', error);\n        alert('Không thể tạo ảnh bánh kem. Vui lòng thử lại.');\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(CakeControl, {\n      numLayers: numLayers,\n      shape: shape,\n      baseColor: baseColor,\n      midCream: midCream,\n      topColorSecondLayer: topColorSecondLayer,\n      topCream: topCream,\n      sugar: sugar,\n      onSelectNumLayers: handleSelectNumLayers,\n      onSelectShape: handleSelectShape,\n      onSelectBaseColor: handleSelectBaseColor,\n      onSelectMidCream: handleSelectMidCream,\n      onSelectTopColorSecondLayer: handleSelectTopColorSecondLayer,\n      onSelectTopCream: handleSelectTopCream,\n      onSelectSugar: handleSelectSugar,\n      onSkipShape: handleSkipShape,\n      onSkipBaseColor: handleSkipBaseColor,\n      onSkipMidCream: handleSkipMidCream,\n      onSkipTopColorSecondLayer: handleSkipTopColorSecondLayer,\n      onSkipTopCream: handleSkipTopCream,\n      onSkipSugar: handleSkipSugar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cake-display-area\",\n      children: [/*#__PURE__*/_jsxDEV(CakeCanvas, {\n        ref: cakeCanvasRef // Gán ref vào CakeCanvas\n        ,\n        layers: layers.map(layer => ({\n          ...layer,\n          src: imagePath + layer.image\n        })),\n        numLayers: numLayers,\n        onDrop: handleDrop // Truyền handleDrop cho CakeCanvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateImage,\n          children: \"T\\u1EA1o \\u1EA3nh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetCake,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"c9ZvPtYBwJF4KhYuQyVl1TblL7k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","CakeControl","CakeCanvas","html2canvas","jsxDEV","_jsxDEV","App","_s","numLayers","setNumLayers","shape","setShape","baseColor","setBaseColor","midCream","setMidCream","topColorSecondLayer","setTopColorSecondLayer","topCream","setTopCream","sugar","setSugar","layers","setLayers","cakeCanvasRef","imagePath","resetCake","updateLayers","newLayer","layerType","removeShapeLayer","prevLayers","updated","filter","layer","type","push","layerOrder","sort","a","b","indexOf","handleSelectNumLayers","layersCount","handleSelectShape","selectedShape","image","handleSelectBaseColor","color","handleSelectMidCream","cream","handleSelectTopColorSecondLayer","handleSelectTopCream","handleSelectSugar","hasSugar","handleSkipShape","handleSkipBaseColor","some","handleSkipMidCream","handleSkipTopColorSecondLayer","handleSkipTopCream","handleSkipSugar","handleDrop","e","preventDefault","data","JSON","parse","dataTransfer","getData","itemType","itemName","parseInt","handleCreateImage","current","backgroundColor","scale","then","canvas","toDataURL","link","document","createElement","href","download","body","appendChild","click","removeChild","alert","catch","error","console","className","children","onSelectNumLayers","onSelectShape","onSelectBaseColor","onSelectMidCream","onSelectTopColorSecondLayer","onSelectTopCream","onSelectSugar","onSkipShape","onSkipBaseColor","onSkipMidCream","onSkipTopColorSecondLayer","onSkipTopCream","onSkipSugar","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","src","onDrop","onClick","_c","$RefreshReg$"],"sources":["D:/Môn học/Công nghệ Java/cake-builder-app/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport CakeControl from './components/CakeControl';\r\nimport CakeCanvas from './components/CakeCanvas';\r\nimport html2canvas from 'html2canvas'; // Import html2canvas\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    // State để lưu trữ các lựa chọn của người dùng\r\n    const [numLayers, setNumLayers] = useState(null);\r\n    const [shape, setShape] = useState(null);\r\n    const [baseColor, setBaseColor] = useState(null);\r\n    const [midCream, setMidCream] = useState(null); // Chỉ khi 2 tầng\r\n    const [topColorSecondLayer, setTopColorSecondLayer] = useState(null); // Chỉ khi 2 tầng\r\n    const [topCream, setTopCream] = useState(null);\r\n    const [sugar, setSugar] = useState(null);\r\n\r\n    // State để quản lý các lớp hình ảnh hiển thị trên canvas\r\n    const [layers, setLayers] = useState([]);\r\n\r\n    // Ref để tham chiếu đến element canvas cho việc chụp ảnh\r\n    const cakeCanvasRef = useRef(null);\r\n\r\n    const imagePath = '/images/';\r\n\r\n    // Hàm reset toàn bộ bánh về trạng thái ban đầu\r\n    const resetCake = () => {\r\n        setNumLayers(null);\r\n        setShape(null);\r\n        setBaseColor(null);\r\n        setMidCream(null);\r\n        setTopColorSecondLayer(null);\r\n        setTopCream(null);\r\n        setSugar(null);\r\n        setLayers([]);\r\n    };\r\n\r\n    // Hàm cập nhật các lớp trên canvas\r\n    const updateLayers = (newLayer, layerType, removeShapeLayer = false) => {\r\n        setLayers(prevLayers => {\r\n            let updated = prevLayers.filter(layer => layer.type !== layerType); // Xóa lớp cũ cùng loại\r\n            if (removeShapeLayer) {\r\n                updated = updated.filter(layer => layer.type !== 'shape'); // Xóa lớp hình dạng nếu yêu cầu\r\n            }\r\n            if (newLayer) {\r\n                updated.push(newLayer); // Thêm lớp mới\r\n            }\r\n            // Sắp xếp lại các lớp để đảm bảo thứ tự hiển thị đúng (zIndex)\r\n            const layerOrder = ['shape', 'base', 'midCream', 'topColorSecondLayer', 'topCream', 'sugar'];\r\n            updated.sort((a, b) => layerOrder.indexOf(a.type) - layerOrder.indexOf(b.type));\r\n            return updated;\r\n        });\r\n    };\r\n\r\n    // --- Các hàm xử lý lựa chọn (click và drag-drop sẽ gọi các hàm này) ---\r\n\r\n    const handleSelectNumLayers = (layersCount) => {\r\n        resetCake(); // Reset toàn bộ khi chọn lại số tầng\r\n        setNumLayers(layersCount);\r\n    };\r\n\r\n    const handleSelectShape = (selectedShape) => {\r\n        setShape(selectedShape);\r\n        setBaseColor(null);\r\n        setMidCream(null);\r\n        setTopColorSecondLayer(null);\r\n        setTopCream(null);\r\n        setSugar(null);\r\n        updateLayers({ type: 'shape', image: `${selectedShape}_form.png` }, 'shape');\r\n    };\r\n\r\n    const handleSelectBaseColor = (color) => {\r\n        setBaseColor(color);\r\n        setMidCream(null);\r\n        setTopColorSecondLayer(null);\r\n        setTopCream(null);\r\n        setSugar(null);\r\n        // Khi chọn màu sắc, ẩn hình dạng và thay bằng hình ảnh màu sắc cơ bản\r\n        updateLayers({ type: 'base', image: `${shape}_base_${color}.png` }, 'base', true);\r\n    };\r\n\r\n    const handleSelectMidCream = (cream) => {\r\n        setMidCream(cream);\r\n        setTopColorSecondLayer(null);\r\n        setTopCream(null);\r\n        setSugar(null);\r\n        updateLayers({ type: 'midCream', image: `${shape}_mid_${cream}.png` }, 'midCream');\r\n    };\r\n\r\n    const handleSelectTopColorSecondLayer = (color) => {\r\n        setTopColorSecondLayer(color);\r\n        setTopCream(null);\r\n        setSugar(null);\r\n        updateLayers({ type: 'topColorSecondLayer', image: `${shape}_base_${color}.png` }, 'topColorSecondLayer');\r\n    };\r\n\r\n    const handleSelectTopCream = (cream) => {\r\n        setTopCream(cream);\r\n        setSugar(null);\r\n        updateLayers({ type: 'topCream', image: `${shape}_top_${cream}.png` }, 'topCream');\r\n    };\r\n\r\n    const handleSelectSugar = (hasSugar) => {\r\n        if (hasSugar) {\r\n            setSugar(true);\r\n            updateLayers({ type: 'sugar', image: `${shape}_sugar.png` }, 'sugar');\r\n        } else {\r\n            setSugar(false); // Đặt false để biết là đã chọn bỏ qua\r\n            updateLayers(null, 'sugar'); // Xóa lớp đường mịn\r\n        }\r\n    };\r\n\r\n    // --- Các hàm xử lý \"Bỏ qua\" ---\r\n\r\n    const handleSkipShape = () => {\r\n        setShape(null);\r\n        setBaseColor(null);\r\n        setMidCream(null);\r\n        setTopColorSecondLayer(null);\r\n        setTopCream(null);\r\n        setSugar(null);\r\n        setLayers([]); // Xóa tất cả các lớp liên quan đến hình dạng và sau đó\r\n    };\r\n\r\n    const handleSkipBaseColor = () => {\r\n        setBaseColor(null);\r\n        setMidCream(null);\r\n        setTopColorSecondLayer(null);\r\n        setTopCream(null);\r\n        setSugar(null);\r\n        setLayers(prevLayers => prevLayers.filter(layer => layer.type !== 'base' && layer.type !== 'midCream' && layer.type !== 'topColorSecondLayer' && layer.type !== 'topCream' && layer.type !== 'sugar'));\r\n        // Giữ lại lớp hình dạng nếu có\r\n        if (shape && !layers.some(layer => layer.type === 'shape')) {\r\n            setLayers(prevLayers => [...prevLayers, { type: 'shape', image: `${shape}_form.png` }]);\r\n        }\r\n    };\r\n\r\n    const handleSkipMidCream = () => {\r\n        setMidCream(null);\r\n        setTopColorSecondLayer(null);\r\n        setTopCream(null);\r\n        setSugar(null);\r\n        setLayers(prevLayers => prevLayers.filter(layer => layer.type !== 'midCream' && layer.type !== 'topColorSecondLayer' && layer.type !== 'topCream' && layer.type !== 'sugar'));\r\n    };\r\n\r\n    const handleSkipTopColorSecondLayer = () => {\r\n        setTopColorSecondLayer(null);\r\n        setTopCream(null);\r\n        setSugar(null);\r\n        setLayers(prevLayers => prevLayers.filter(layer => layer.type !== 'topColorSecondLayer' && layer.type !== 'topCream' && layer.type !== 'sugar'));\r\n    };\r\n\r\n    const handleSkipTopCream = () => {\r\n        setTopCream(null);\r\n        setSugar(null);\r\n        setLayers(prevLayers => prevLayers.filter(layer => layer.type !== 'topCream' && layer.type !== 'sugar'));\r\n    };\r\n\r\n    const handleSkipSugar = () => {\r\n        setSugar(null);\r\n        setLayers(prevLayers => prevLayers.filter(layer => layer.type !== 'sugar'));\r\n    };\r\n\r\n    // --- Hàm xử lý kéo thả ---\r\n    const handleDrop = (e) => {\r\n        e.preventDefault();\r\n        const data = JSON.parse(e.dataTransfer.getData('application/json'));\r\n        const { itemType, itemName } = data;\r\n\r\n        // Dựa vào itemType để gọi hàm xử lý lựa chọn tương ứng\r\n        switch (itemType) {\r\n            case 'numLayers':\r\n                handleSelectNumLayers(parseInt(itemName));\r\n                break;\r\n            case 'shape':\r\n                handleSelectShape(itemName);\r\n                break;\r\n            case 'baseColor':\r\n                handleSelectBaseColor(itemName);\r\n                break;\r\n            case 'midCream':\r\n                handleSelectMidCream(itemName);\r\n                break;\r\n            case 'topColorSecondLayer':\r\n                handleSelectTopColorSecondLayer(itemName);\r\n                break;\r\n            case 'topCream':\r\n                handleSelectTopCream(itemName);\r\n                break;\r\n            case 'sugar':\r\n                handleSelectSugar(itemName === 'yes'); // 'yes' hoặc 'no'\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Hàm tạo ảnh từ canvas\r\n    const handleCreateImage = () => {\r\n        if (cakeCanvasRef.current) {\r\n            html2canvas(cakeCanvasRef.current, {\r\n                backgroundColor: null, // Đặt null để nền trong suốt nếu không có màu nền\r\n                scale: 2, // Tăng độ phân giải ảnh\r\n            }).then(canvas => {\r\n                const image = canvas.toDataURL('image/png');\r\n                const link = document.createElement('a');\r\n                link.href = image;\r\n                link.download = 'banh_kem_thiet_ke.png';\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                alert('Ảnh bánh kem đã được tạo và tải xuống!');\r\n            }).catch(error => {\r\n                console.error('Lỗi khi tạo ảnh:', error);\r\n                alert('Không thể tạo ảnh bánh kem. Vui lòng thử lại.');\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <CakeControl\r\n                numLayers={numLayers}\r\n                shape={shape}\r\n                baseColor={baseColor}\r\n                midCream={midCream}\r\n                topColorSecondLayer={topColorSecondLayer}\r\n                topCream={topCream}\r\n                sugar={sugar}\r\n                onSelectNumLayers={handleSelectNumLayers}\r\n                onSelectShape={handleSelectShape}\r\n                onSelectBaseColor={handleSelectBaseColor}\r\n                onSelectMidCream={handleSelectMidCream}\r\n                onSelectTopColorSecondLayer={handleSelectTopColorSecondLayer}\r\n                onSelectTopCream={handleSelectTopCream}\r\n                onSelectSugar={handleSelectSugar}\r\n                onSkipShape={handleSkipShape}\r\n                onSkipBaseColor={handleSkipBaseColor}\r\n                onSkipMidCream={handleSkipMidCream}\r\n                onSkipTopColorSecondLayer={handleSkipTopColorSecondLayer}\r\n                onSkipTopCream={handleSkipTopCream}\r\n                onSkipSugar={handleSkipSugar}\r\n            />\r\n            <div className=\"cake-display-area\">\r\n                <CakeCanvas\r\n                    ref={cakeCanvasRef} // Gán ref vào CakeCanvas\r\n                    layers={layers.map(layer => ({ ...layer, src: imagePath + layer.image }))}\r\n                    numLayers={numLayers}\r\n                    onDrop={handleDrop} // Truyền handleDrop cho CakeCanvas\r\n                />\r\n                <div className=\"actions\">\r\n                    <button onClick={handleCreateImage}>Tạo ảnh</button>\r\n                    <button onClick={resetCake}>Reset</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}