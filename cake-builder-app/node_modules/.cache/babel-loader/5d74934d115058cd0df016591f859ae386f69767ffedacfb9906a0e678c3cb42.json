{"ast":null,"code":"var _jsxFileName = \"D:\\\\M\\xF4n h\\u1ECDc\\\\C\\xF4ng ngh\\u1EC7 Java\\\\cake-builder-app\\\\src\\\\components\\\\CakeCanvas.js\";\nimport React, { forwardRef } from 'react'; // Import forwardRef\nimport './CakeCanvas.css';\nimport Layer from './Layer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 300;\nconst CANVAS_HEIGHT = 300;\n// Vị trí gốc cho lớp bánh đầu tiên (hình dạng/màu sắc cơ bản)\n// Đặt BASE_X và BASE_Y để hình ảnh 100x100px được căn giữa trong canvas 300x300px\n// (300 / 2) - (100 / 2) = 150 - 50 = 100\nconst BASE_X = CANVAS_WIDTH / 2;\nconst BASE_Y = CANVAS_HEIGHT / 2 + 50; // Điều chỉnh vị trí trung tâm theo chiều dọc để bánh không quá cao\n\n// Sử dụng forwardRef để có thể truyền ref từ component cha (App.js)\n// forwardRef nhận một hàm component, và hàm này sẽ nhận props và ref như các đối số\nconst CakeCanvas = /*#__PURE__*/forwardRef(_c = ({\n  layers,\n  numLayers,\n  onDrop\n}, ref) => {\n  // Thêm ref vào đối số\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cake-canvas\",\n    style: {\n      width: `${CANVAS_WIDTH}px`,\n      height: `${CANVAS_HEIGHT}px`\n    },\n    ref: ref // Gán ref vào div canvas\n    ,\n    onDrop: onDrop // Gán sự kiện onDrop từ props\n    ,\n    onDragOver: e => e.preventDefault() // Ngăn chặn hành vi mặc định để cho phép thả\n    ,\n    children: layers.map((layer, index) => {\n      // Khởi tạo vị trí và kích thước mặc định cho mỗi lớp là 100x100px\n      // x, y là góc trên bên trái của hình ảnh 100x100px, được căn giữa tại BASE_X, BASE_Y\n      let x = BASE_X - 50; // 50 là một nửa chiều rộng/cao mặc định (100px)\n      let y = BASE_Y - 50;\n      let width = 100;\n      let height = 100;\n      let zIndex = index + 1; // Đảm bảo các lớp mới hơn nằm trên các lớp cũ hơn\n\n      switch (layer.type) {\n        case 'shape':\n        case 'base':\n        case 'midCream':\n          // Các lớp này giữ nguyên kích thước 100x100px\n          // Vị trí được điều chỉnh tương ứng với lớp dưới\n          if (layer.type === 'midCream') {\n            y -= 22.6;\n          }\n          break;\n        case 'topColorSecondLayer':\n          // Màu sắc tầng 2: giảm kích thước xuống 80% và dịch chuyển theo yêu cầu\n          width *= 0.8;\n          height *= 0.8;\n          x += 37.6;\n          y -= 61.9;\n          break;\n        case 'topCream':\n          // Kem phủ: vị trí và kích thước khác nhau tùy thuộc vào số tầng\n          if (numLayers === 1) {\n            // Bánh 1 tầng: giữ nguyên 100x100px, dịch lên trên 22.6px\n            y -= 22.6;\n          } else if (numLayers === 2) {\n            // Bánh 2 tầng: giảm kích thước xuống 80% và dịch chuyển theo yêu cầu\n            width *= 0.8;\n            height *= 0.8;\n            x += 37.6;\n            y -= 61.9;\n          }\n          break;\n        case 'sugar':\n          // Đường mịn: vị trí và kích thước khác nhau tùy thuộc vào số tầng\n          if (numLayers === 1) {\n            // Bánh 1 tầng: giữ nguyên 100x100px, dịch lên trên 22.6px\n            y -= 22.6;\n          } else if (numLayers === 2) {\n            // Bánh 2 tầng: giảm kích thước xuống 80% và dịch chuyển theo yêu cầu\n            width *= 0.8;\n            height *= 0.8;\n            x += 37.6;\n            y -= 61.9;\n          }\n          break;\n        default:\n          break;\n      }\n      return /*#__PURE__*/_jsxDEV(Layer, {\n        // Sử dụng layer.type làm key để đảm bảo cập nhật đúng\n        src: layer.src,\n        alt: layer.type,\n        style: {\n          position: 'absolute',\n          left: `${x}px`,\n          top: `${y}px`,\n          width: `${width}px`,\n          height: `${height}px`,\n          zIndex: zIndex\n        }\n      }, layer.type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n});\n_c2 = CakeCanvas;\nexport default CakeCanvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"CakeCanvas$forwardRef\");\n$RefreshReg$(_c2, \"CakeCanvas\");","map":{"version":3,"names":["React","forwardRef","Layer","jsxDEV","_jsxDEV","CANVAS_WIDTH","CANVAS_HEIGHT","BASE_X","BASE_Y","CakeCanvas","_c","layers","numLayers","onDrop","ref","className","style","width","height","onDragOver","e","preventDefault","children","map","layer","index","x","y","zIndex","type","src","alt","position","left","top","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["D:/Môn học/Công nghệ Java/cake-builder-app/src/components/CakeCanvas.js"],"sourcesContent":["import React, { forwardRef } from 'react'; // Import forwardRef\r\nimport './CakeCanvas.css';\r\nimport Layer from './Layer';\r\n\r\nconst CANVAS_WIDTH = 300;\r\nconst CANVAS_HEIGHT = 300;\r\n// Vị trí gốc cho lớp bánh đầu tiên (hình dạng/màu sắc cơ bản)\r\n// Đặt BASE_X và BASE_Y để hình ảnh 100x100px được căn giữa trong canvas 300x300px\r\n// (300 / 2) - (100 / 2) = 150 - 50 = 100\r\nconst BASE_X = CANVAS_WIDTH / 2;\r\nconst BASE_Y = CANVAS_HEIGHT / 2 + 50; // Điều chỉnh vị trí trung tâm theo chiều dọc để bánh không quá cao\r\n\r\n// Sử dụng forwardRef để có thể truyền ref từ component cha (App.js)\r\n// forwardRef nhận một hàm component, và hàm này sẽ nhận props và ref như các đối số\r\nconst CakeCanvas = forwardRef(({ layers, numLayers, onDrop }, ref) => { // Thêm ref vào đối số\r\n    return (\r\n        <div\r\n            className=\"cake-canvas\"\r\n            style={{ width: `${CANVAS_WIDTH}px`, height: `${CANVAS_HEIGHT}px` }}\r\n            ref={ref} // Gán ref vào div canvas\r\n            onDrop={onDrop} // Gán sự kiện onDrop từ props\r\n            onDragOver={(e) => e.preventDefault()} // Ngăn chặn hành vi mặc định để cho phép thả\r\n        >\r\n            {layers.map((layer, index) => {\r\n                // Khởi tạo vị trí và kích thước mặc định cho mỗi lớp là 100x100px\r\n                // x, y là góc trên bên trái của hình ảnh 100x100px, được căn giữa tại BASE_X, BASE_Y\r\n                let x = BASE_X - 50; // 50 là một nửa chiều rộng/cao mặc định (100px)\r\n                let y = BASE_Y - 50;\r\n                let width = 100;\r\n                let height = 100;\r\n                let zIndex = index + 1; // Đảm bảo các lớp mới hơn nằm trên các lớp cũ hơn\r\n\r\n                switch (layer.type) {\r\n                    case 'shape':\r\n                    case 'base':\r\n                    case 'midCream':\r\n                        // Các lớp này giữ nguyên kích thước 100x100px\r\n                        // Vị trí được điều chỉnh tương ứng với lớp dưới\r\n                        if (layer.type === 'midCream') {\r\n                            y -= 22.6;\r\n                        }\r\n                        break;\r\n                    case 'topColorSecondLayer':\r\n                        // Màu sắc tầng 2: giảm kích thước xuống 80% và dịch chuyển theo yêu cầu\r\n                        width *= 0.8;\r\n                        height *= 0.8;\r\n                        x += 37.6;\r\n                        y -= 61.9;\r\n                        break;\r\n                    case 'topCream':\r\n                        // Kem phủ: vị trí và kích thước khác nhau tùy thuộc vào số tầng\r\n                        if (numLayers === 1) {\r\n                            // Bánh 1 tầng: giữ nguyên 100x100px, dịch lên trên 22.6px\r\n                            y -= 22.6;\r\n                        } else if (numLayers === 2) {\r\n                            // Bánh 2 tầng: giảm kích thước xuống 80% và dịch chuyển theo yêu cầu\r\n                            width *= 0.8;\r\n                            height *= 0.8;\r\n                            x += 37.6;\r\n                            y -= 61.9;\r\n                        }\r\n                        break;\r\n                    case 'sugar':\r\n                        // Đường mịn: vị trí và kích thước khác nhau tùy thuộc vào số tầng\r\n                        if (numLayers === 1) {\r\n                            // Bánh 1 tầng: giữ nguyên 100x100px, dịch lên trên 22.6px\r\n                            y -= 22.6;\r\n                        } else if (numLayers === 2) {\r\n                            // Bánh 2 tầng: giảm kích thước xuống 80% và dịch chuyển theo yêu cầu\r\n                            width *= 0.8;\r\n                            height *= 0.8;\r\n                            x += 37.6;\r\n                            y -= 61.9;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                return (\r\n                    <Layer\r\n                        key={layer.type} // Sử dụng layer.type làm key để đảm bảo cập nhật đúng\r\n                        src={layer.src}\r\n                        alt={layer.type}\r\n                        style={{\r\n                            position: 'absolute',\r\n                            left: `${x}px`,\r\n                            top: `${y}px`,\r\n                            width: `${width}px`,\r\n                            height: `${height}px`,\r\n                            zIndex: zIndex,\r\n                        }}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default CakeCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}